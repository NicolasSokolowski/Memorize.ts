services:
  database:
    image: postgres
    env_file: .env
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./pg_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DATABASE} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    ports:
      - 8080:8080
    container_name: adminer
    restart: always
    depends_on:
      database:
        condition: service_healthy

  server:
    build: ./server
    command: npm run dev
    restart: always
    env_file: .env
    volumes:
      - ./server:/app
    depends_on:
      database:
        condition: service_healthy

  client:
    build: ./client
    command: npm run dev
    restart: always
    env_file: ./client/.env
    volumes:
      - ./client/src:/app/src

  gateway:
    image: nginx
    ports:
      - 5050:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server

  bridge:
    image: alpine
    container_name: bridge
    ports:
      - 1025:1025

volumes:
  pg_data: